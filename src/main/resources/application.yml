auth0:
  audience: ${AUTH0_AUDIENCE:https://dev-grc8v6ad25njr8sw.us.auth0.com/api/v2/}
  issuer: ${AUTH0_ISSUER_URI:https://dev-grc8v6ad25njr8sw.us.auth0.com/}

aws:
  s3:
    access-key: ${S3_ACCESS_KEY:minioadmin}
    secret-key: ${S3_SECRET_KEY:minioadmin}
    endpoint: ${S3_URL:http://localhost:9000/}
    region: ${S3_LOCATION:eu-west-1}
    buckets:
      avatar: ${AVATAR_BUCKET:avatars}

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
#    org.apache.kafka.clients.consumer: DEBUG
#    org.springframework.kafka.listener: DEBUG

spring:
  application:
    name: rabbithole

  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/db}
    username: ${DB_USERNAME:admin}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update

  kafka:
    bootstrap-servers:
      - localhost:9092
    consumer:
      group-id: chat-consumer-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.UUIDDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*" # TODO: Change this to trusted java DTO package!
    producer:
      key-serializer: org.apache.kafka.common.serialization.UUIDSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${AUTH0_ISSUER_URI:https://dev-grc8v6ad25njr8sw.us.auth0.com/}
